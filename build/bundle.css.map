{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Eye.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Eye from \"./Eye.svelte\";\n\n  function random_color() {\n    let h = Math.random() * 360\n    let s = Math.round(50 + Math.random() * 50)\n    let l = Math.round(30 + Math.random() * 40)\n    return `hsl(${h}, ${s}%, ${l}%)`\n  }\n\n  function eye_distance(eye1, eye2) {\n    let dx = eye1.x - eye2.x;\n    let dy = eye1.y - eye2.y;\n    return Math.sqrt((dx * dx) + (dy * dy))\n  }\n\n  function can_place_eye(new_eye) {\n    return eyes.every(eye =>\n      eye_distance(eye, new_eye) >= eye.sz + new_eye.sz + 5\n    )\n  }\n\n  function onmousemove(event) {\n    let svg = document.getElementById(\"eyes\")\n    let rect = svg.getBoundingClientRect()\n    mx = event.pageX - rect.x\n    my = event.pageY - rect.y\n  }\n\n  let eyes = [];\n  let wh = window.innerHeight;\n  let ww = window.innerWidth;\n  // init it to something random if mouse starts outside window\n  let mx = Math.random() * ww;\n  let my = Math.random() * wh;\n\n  [...Array.from({ length: 1000 })].forEach(_ => {\n    let sz = 20 + Math.random() * 60\n    let x = sz + Math.random() * (ww - 2 * sz)\n    let y = sz + Math.random() * (wh - 2 * sz)\n    let color = random_color()\n    let new_eye = {x, y, sz, color}\n    if (can_place_eye(new_eye)) {\n      eyes.push(new_eye)\n    }\n  });\n</script>\n\n<svg id=\"eyes\" on:mousemove={onmousemove}>\n  {#each eyes as {x,y,sz,color}}\n    <Eye {x} {y} {mx} {my} {sz} {color}/>\n  {/each}\n</svg>\n\n<style>\n  svg {\n    width: 100vw;\n    height: 100vh;\n    display: block;\n    background-color: #aaa;\n  }\n</style>\n",
    "<script>\n  export let x;\n  export let y;\n  export let mx;\n  export let my;\n  export let sz;\n  export let color;\n\n  let max_eye_movement = 0.3 * sz;\n\n  $: dx = mx !== null ? (mx - x) : 0\n  $: dy = my !== null ? (my - y) : 0\n  $: dl = Math.max(0.000001, Math.sqrt(dx*dx + dy*dy))\n  $: displacement = Math.min(max_eye_movement, dl)\n  $: rx = x + dx/dl * displacement\n  $: ry = y + dy/dl * displacement\n</script>\n\n<g>\n  <circle class=\"eye1\" cx={x} cy={y} r={sz} />\n  <circle class=\"eye2\" cx={rx} cy={ry} r={sz * 0.5} style=\"fill: {color}\"/>\n  <circle class=\"eye3\" cx={rx} cy={ry} r={sz * 0.2}/>\n</g>\n\n<style>\n  .eye1 {\n    fill: white;\n    stroke: black;\n    stroke-width: 3px;\n  }\n  .eye2 {\n    stroke: black;\n    stroke-width: 1px;\n  }\n  .eye3 {\n    fill: black;\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "AAuDE,GAAG,cAAC,CAAC,AACH,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,OAAO,CAAE,KAAK,CACd,gBAAgB,CAAE,IAAI,AACxB,CAAC;ACnCD,KAAK,cAAC,CAAC,AACL,IAAI,CAAE,KAAK,CACX,MAAM,CAAE,KAAK,CACb,YAAY,CAAE,GAAG,AACnB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,MAAM,CAAE,KAAK,CACb,YAAY,CAAE,GAAG,AACnB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,IAAI,CAAE,KAAK,AACb,CAAC"
}